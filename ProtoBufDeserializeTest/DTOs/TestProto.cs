// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: testProto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MediaRentals.DTOs {

  /// <summary>Holder for reflection information generated from testProto.proto</summary>
  public static partial class TestProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for testProto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TestProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg90ZXN0UHJvdG8ucHJvdG8SC21lZGlhUmVudGFsGg90aW1lc3RhbXAucHJv",
            "dG8i3gEKCUR2ZFJlbnRhbBIQCghEdmRUaXRsZRgBIAEoCRIzCghEdmRHZW5y",
            "ZRgCIAEoDjIhLm1lZGlhUmVudGFsLkR2ZFJlbnRhbC5Nb3ZpZUdlbnJlEjIK",
            "DnJlbnRhbERhdGVUaW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcCJWCgpNb3ZpZUdlbnJlEgoKBkFjdGlvbhAAEg0KCUFkdmVudHVyZRAB",
            "EgoKBkNvbWVkeRACEgkKBUNyaW1lEAMSCQoFRHJhbWEQBBILCgdGYW50YXN5",
            "EAUijAEKCkJvb2tSZW50YWwSEQoJQm9va1RpdGxlGAEgASgJEhIKCkJvb2tB",
            "dXRob3IYAiABKAkSDgoGSVNCTjEzGAMgASgJEhMKC3ByaW50TGVuZ3RoGAQg",
            "ASgNEjIKDnJlbnRhbERhdGVUaW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcEIUqgIRTWVkaWFSZW50YWxzLkRUT3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaRentals.DTOs.DvdRental), global::MediaRentals.DTOs.DvdRental.Parser, new[]{ "DvdTitle", "DvdGenre", "RentalDateTime" }, null, new[]{ typeof(global::MediaRentals.DTOs.DvdRental.Types.MovieGenre) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaRentals.DTOs.BookRental), global::MediaRentals.DTOs.BookRental.Parser, new[]{ "BookTitle", "BookAuthor", "ISBN13", "PrintLength", "RentalDateTime" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DvdRental : pb::IMessage<DvdRental> {
    private static readonly pb::MessageParser<DvdRental> _parser = new pb::MessageParser<DvdRental>(() => new DvdRental());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DvdRental> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaRentals.DTOs.TestProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvdRental() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvdRental(DvdRental other) : this() {
      dvdTitle_ = other.dvdTitle_;
      dvdGenre_ = other.dvdGenre_;
      rentalDateTime_ = other.rentalDateTime_ != null ? other.rentalDateTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DvdRental Clone() {
      return new DvdRental(this);
    }

    /// <summary>Field number for the "DvdTitle" field.</summary>
    public const int DvdTitleFieldNumber = 1;
    private string dvdTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DvdTitle {
      get { return dvdTitle_; }
      set {
        dvdTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DvdGenre" field.</summary>
    public const int DvdGenreFieldNumber = 2;
    private global::MediaRentals.DTOs.DvdRental.Types.MovieGenre dvdGenre_ = global::MediaRentals.DTOs.DvdRental.Types.MovieGenre.Action;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaRentals.DTOs.DvdRental.Types.MovieGenre DvdGenre {
      get { return dvdGenre_; }
      set {
        dvdGenre_ = value;
      }
    }

    /// <summary>Field number for the "rentalDateTime" field.</summary>
    public const int RentalDateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp rentalDateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RentalDateTime {
      get { return rentalDateTime_; }
      set {
        rentalDateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DvdRental);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DvdRental other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DvdTitle != other.DvdTitle) return false;
      if (DvdGenre != other.DvdGenre) return false;
      if (!object.Equals(RentalDateTime, other.RentalDateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DvdTitle.Length != 0) hash ^= DvdTitle.GetHashCode();
      if (DvdGenre != global::MediaRentals.DTOs.DvdRental.Types.MovieGenre.Action) hash ^= DvdGenre.GetHashCode();
      if (rentalDateTime_ != null) hash ^= RentalDateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DvdTitle.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DvdTitle);
      }
      if (DvdGenre != global::MediaRentals.DTOs.DvdRental.Types.MovieGenre.Action) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DvdGenre);
      }
      if (rentalDateTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RentalDateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DvdTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DvdTitle);
      }
      if (DvdGenre != global::MediaRentals.DTOs.DvdRental.Types.MovieGenre.Action) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DvdGenre);
      }
      if (rentalDateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RentalDateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DvdRental other) {
      if (other == null) {
        return;
      }
      if (other.DvdTitle.Length != 0) {
        DvdTitle = other.DvdTitle;
      }
      if (other.DvdGenre != global::MediaRentals.DTOs.DvdRental.Types.MovieGenre.Action) {
        DvdGenre = other.DvdGenre;
      }
      if (other.rentalDateTime_ != null) {
        if (rentalDateTime_ == null) {
          RentalDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RentalDateTime.MergeFrom(other.RentalDateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DvdTitle = input.ReadString();
            break;
          }
          case 16: {
            DvdGenre = (global::MediaRentals.DTOs.DvdRental.Types.MovieGenre) input.ReadEnum();
            break;
          }
          case 26: {
            if (rentalDateTime_ == null) {
              RentalDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RentalDateTime);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DvdRental message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum MovieGenre {
        [pbr::OriginalName("Action")] Action = 0,
        [pbr::OriginalName("Adventure")] Adventure = 1,
        [pbr::OriginalName("Comedy")] Comedy = 2,
        [pbr::OriginalName("Crime")] Crime = 3,
        [pbr::OriginalName("Drama")] Drama = 4,
        [pbr::OriginalName("Fantasy")] Fantasy = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Our address book file is just one of these.
  /// </summary>
  public sealed partial class BookRental : pb::IMessage<BookRental> {
    private static readonly pb::MessageParser<BookRental> _parser = new pb::MessageParser<BookRental>(() => new BookRental());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BookRental> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaRentals.DTOs.TestProtoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookRental() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookRental(BookRental other) : this() {
      bookTitle_ = other.bookTitle_;
      bookAuthor_ = other.bookAuthor_;
      iSBN13_ = other.iSBN13_;
      printLength_ = other.printLength_;
      rentalDateTime_ = other.rentalDateTime_ != null ? other.rentalDateTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookRental Clone() {
      return new BookRental(this);
    }

    /// <summary>Field number for the "BookTitle" field.</summary>
    public const int BookTitleFieldNumber = 1;
    private string bookTitle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookTitle {
      get { return bookTitle_; }
      set {
        bookTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BookAuthor" field.</summary>
    public const int BookAuthorFieldNumber = 2;
    private string bookAuthor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookAuthor {
      get { return bookAuthor_; }
      set {
        bookAuthor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ISBN13" field.</summary>
    public const int ISBN13FieldNumber = 3;
    private string iSBN13_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ISBN13 {
      get { return iSBN13_; }
      set {
        iSBN13_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "printLength" field.</summary>
    public const int PrintLengthFieldNumber = 4;
    private uint printLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PrintLength {
      get { return printLength_; }
      set {
        printLength_ = value;
      }
    }

    /// <summary>Field number for the "rentalDateTime" field.</summary>
    public const int RentalDateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp rentalDateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RentalDateTime {
      get { return rentalDateTime_; }
      set {
        rentalDateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BookRental);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BookRental other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BookTitle != other.BookTitle) return false;
      if (BookAuthor != other.BookAuthor) return false;
      if (ISBN13 != other.ISBN13) return false;
      if (PrintLength != other.PrintLength) return false;
      if (!object.Equals(RentalDateTime, other.RentalDateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BookTitle.Length != 0) hash ^= BookTitle.GetHashCode();
      if (BookAuthor.Length != 0) hash ^= BookAuthor.GetHashCode();
      if (ISBN13.Length != 0) hash ^= ISBN13.GetHashCode();
      if (PrintLength != 0) hash ^= PrintLength.GetHashCode();
      if (rentalDateTime_ != null) hash ^= RentalDateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BookTitle.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BookTitle);
      }
      if (BookAuthor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BookAuthor);
      }
      if (ISBN13.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ISBN13);
      }
      if (PrintLength != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PrintLength);
      }
      if (rentalDateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RentalDateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BookTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookTitle);
      }
      if (BookAuthor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookAuthor);
      }
      if (ISBN13.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ISBN13);
      }
      if (PrintLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PrintLength);
      }
      if (rentalDateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RentalDateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BookRental other) {
      if (other == null) {
        return;
      }
      if (other.BookTitle.Length != 0) {
        BookTitle = other.BookTitle;
      }
      if (other.BookAuthor.Length != 0) {
        BookAuthor = other.BookAuthor;
      }
      if (other.ISBN13.Length != 0) {
        ISBN13 = other.ISBN13;
      }
      if (other.PrintLength != 0) {
        PrintLength = other.PrintLength;
      }
      if (other.rentalDateTime_ != null) {
        if (rentalDateTime_ == null) {
          RentalDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RentalDateTime.MergeFrom(other.RentalDateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BookTitle = input.ReadString();
            break;
          }
          case 18: {
            BookAuthor = input.ReadString();
            break;
          }
          case 26: {
            ISBN13 = input.ReadString();
            break;
          }
          case 32: {
            PrintLength = input.ReadUInt32();
            break;
          }
          case 42: {
            if (rentalDateTime_ == null) {
              RentalDateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RentalDateTime);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
